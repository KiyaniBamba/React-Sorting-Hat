{"ast":null,"code":"var _jsxFileName = \"/Users/kiyanibamba/Documents/GitHub/React-Sorting-Hat/react-sorting-hat/src/App.js\";\nimport React, { Component } from 'react'; // import logo from './logo.svg';\n\nimport './App.css';\nimport quizQuestions from './Components/QuizQuestion';\nimport Question from './Components/Questions.js';\nimport Quiz from './Components/Quiz.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      counter: 0,\n      questionId: 1,\n      question: '',\n      answerOptions: [],\n      answer: '',\n      answersCount: {\n        nintendo: 0,\n        microsoft: 0,\n        sony: 0\n      },\n      result: ''\n    };\n    this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\n  }\n\n  componentWillMount() {\n    const shuffledAnswerOptions = quizQuestions.map(question => this.shuffleArray(question.answers));\n    this.setState({\n      question: quizQuestions[0].question,\n      answerOptions: shuffledAnswerOptions[0]\n    });\n  }\n\n  shuffleArray(array) {\n    var currentIndex = array.length,\n        temporaryValue,\n        randomIndex; // While there remain elements to shuffle...\n\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1; // And swap it with the current element.\n\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"App-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Welcome to Hogwart\")), React.createElement(Quiz, {\n      answer: this.state.answer,\n      answerOptions: this.state.answerOptions,\n      questionId: this.state.questionId,\n      question: this.state.question,\n      questionTotal: quizQuestions.length,\n      onAnswerSelected: this.handleAnswerSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kiyanibamba/Documents/GitHub/React-Sorting-Hat/react-sorting-hat/src/App.js"],"names":["React","Component","quizQuestions","Question","Quiz","App","constructor","props","state","counter","questionId","question","answerOptions","answer","answersCount","nintendo","microsoft","sony","result","handleAnswerSelected","bind","componentWillMount","shuffledAnswerOptions","map","shuffleArray","answers","setState","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAO,WAAP;AAEA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAE1BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,OAAO,EAAE,CADG;AAEZC,MAAAA,UAAU,EAAE,CAFA;AAGZC,MAAAA,QAAQ,EAAE,EAHE;AAIZC,MAAAA,aAAa,EAAE,EAJH;AAKZC,MAAAA,MAAM,EAAE,EALI;AAMZC,MAAAA,YAAY,EAAE;AACZC,QAAAA,QAAQ,EAAE,CADE;AAEZC,QAAAA,SAAS,EAAE,CAFC;AAGZC,QAAAA,IAAI,EAAE;AAHM,OANF;AAWZC,MAAAA,MAAM,EAAE;AAXI,KAAb;AAaA,SAAKC,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BC,IAA1B,CAA+B,IAA/B,CAA5B;AACD;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB,UAAMC,qBAAqB,GAAGpB,aAAa,CAACqB,GAAd,CAAmBZ,QAAD,IAAc,KAAKa,YAAL,CAAkBb,QAAQ,CAACc,OAA3B,CAAhC,CAA9B;AACA,SAAKC,QAAL,CAAc;AACZf,MAAAA,QAAQ,EAAET,aAAa,CAAC,CAAD,CAAb,CAAiBS,QADf;AAEZC,MAAAA,aAAa,EAAEU,qBAAqB,CAAC,CAAD;AAFxB,KAAd;AAID;;AAEDE,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAClB,QAAIC,YAAY,GAAGD,KAAK,CAACE,MAAzB;AAAA,QAAiCC,cAAjC;AAAA,QAAiDC,WAAjD,CADkB,CAElB;;AACA,WAAO,MAAMH,YAAb,EAA2B;AACzB;AACAG,MAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,YAA3B,CAAd;AACAA,MAAAA,YAAY,IAAI,CAAhB,CAHyB,CAIzB;;AACAE,MAAAA,cAAc,GAAGH,KAAK,CAACC,YAAD,CAAtB;AACAD,MAAAA,KAAK,CAACC,YAAD,CAAL,GAAsBD,KAAK,CAACI,WAAD,CAA3B;AACAJ,MAAAA,KAAK,CAACI,WAAD,CAAL,GAAqBD,cAArB;AACD;;AACD,WAAOH,KAAP;AACD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF,CADF,EAKE,oBAAC,IAAD;AACE,MAAA,MAAM,EAAE,KAAK3B,KAAL,CAAWK,MADrB;AAEE,MAAA,aAAa,EAAE,KAAKL,KAAL,CAAWI,aAF5B;AAGE,MAAA,UAAU,EAAE,KAAKJ,KAAL,CAAWE,UAHzB;AAIE,MAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG,QAJvB;AAKE,MAAA,aAAa,EAAET,aAAa,CAAC2B,MAL/B;AAME,MAAA,gBAAgB,EAAE,KAAKV,oBANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AAgBD;;AA5DyB;;AA+D5B,eAAed,GAAf","sourcesContent":["import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\n\nimport quizQuestions from './Components/QuizQuestion';\nimport Question from './Components/Questions.js';\nimport Quiz from './Components/Quiz.js'\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n     counter: 0,\n     questionId: 1,\n     question: '',\n     answerOptions: [],\n     answer: '',\n     answersCount: {\n       nintendo: 0,\n       microsoft: 0,\n       sony: 0\n     },\n     result: ''\n    };\n    this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\n  }\n\n  componentWillMount() {\n    const shuffledAnswerOptions = quizQuestions.map((question) => this.shuffleArray(question.answers));  \n    this.setState({\n      question: quizQuestions[0].question,\n      answerOptions: shuffledAnswerOptions[0]\n    });\n  }\n\n  shuffleArray(array) {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    return array;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n          <h1 className=\"App-title\">Welcome to Hogwart</h1>\n        </header>\n        <Quiz\n          answer={this.state.answer}\n          answerOptions={this.state.answerOptions}\n          questionId={this.state.questionId}\n          question={this.state.question}\n          questionTotal={quizQuestions.length}\n          onAnswerSelected={this.handleAnswerSelected}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
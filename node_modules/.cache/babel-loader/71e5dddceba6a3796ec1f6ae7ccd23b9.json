{"ast":null,"code":"var _jsxFileName = \"/Users/kiyanibamba/Documents/GitHub/React-Sorting-Hat/react-sorting-hat/src/Components/Quiz.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Question from './Questions.js';\nimport QuestionCount from './Q';\nimport AnswerOption from './Answers.js';\n\nfunction Quiz(props) {\n  function renderAnswerOptions(key) {\n    return React.createElement(AnswerOption, {\n      key: key.content,\n      answerContent: key.content,\n      answerType: key.type,\n      answer: props.answer,\n      questionId: props.questionId,\n      onAnswerSelected: props.onAnswerSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"quiz\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(QuestionCount, {\n    counter: props.questionId,\n    total: props.questionTotal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(Question, {\n    content: props.question,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"ul\", {\n    className: \"answerOptions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, props.answerOptions.map(renderAnswerOptions)));\n}\n\nQuiz.propTypes = {\n  answer: PropTypes.string,\n  answerOptions: PropTypes.array,\n  counter: PropTypes.number,\n  question: PropTypes.string,\n  questionId: PropTypes.number,\n  questionTotal: PropTypes.number,\n  onAnswerSelected: PropTypes.func\n};\nexport default Quiz;","map":{"version":3,"sources":["/Users/kiyanibamba/Documents/GitHub/React-Sorting-Hat/react-sorting-hat/src/Components/Quiz.js"],"names":["React","PropTypes","Question","QuestionCount","AnswerOption","Quiz","props","renderAnswerOptions","key","content","type","answer","questionId","onAnswerSelected","questionTotal","question","answerOptions","map","propTypes","string","array","counter","number","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,aAAP,MAA0B,KAA1B;AACA,OAAOC,YAAP,MAAyB,cAAzB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAEjB,WAASC,mBAAT,CAA6BC,GAA7B,EAAkC;AAC9B,WACE,oBAAC,YAAD;AACE,MAAA,GAAG,EAAEA,GAAG,CAACC,OADX;AAEE,MAAA,aAAa,EAAED,GAAG,CAACC,OAFrB;AAGE,MAAA,UAAU,EAAED,GAAG,CAACE,IAHlB;AAIE,MAAA,MAAM,EAAEJ,KAAK,CAACK,MAJhB;AAKE,MAAA,UAAU,EAAEL,KAAK,CAACM,UALpB;AAME,MAAA,gBAAgB,EAAEN,KAAK,CAACO,gBAN1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD;;AAEH,SACG;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AACE,IAAA,OAAO,EAAEP,KAAK,CAACM,UADjB;AAEE,IAAA,KAAK,EAAEN,KAAK,CAACQ,aAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAER,KAAK,CAACS,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,KAAK,CAACU,aAAN,CAAoBC,GAApB,CAAwBV,mBAAxB,CADH,CANF,CADH;AAYD;;AACDF,IAAI,CAACa,SAAL,GAAiB;AACfP,EAAAA,MAAM,EAAEV,SAAS,CAACkB,MADH;AAEfH,EAAAA,aAAa,EAAEf,SAAS,CAACmB,KAFV;AAGfC,EAAAA,OAAO,EAAEpB,SAAS,CAACqB,MAHJ;AAIfP,EAAAA,QAAQ,EAAEd,SAAS,CAACkB,MAJL;AAKfP,EAAAA,UAAU,EAAEX,SAAS,CAACqB,MALP;AAMfR,EAAAA,aAAa,EAAEb,SAAS,CAACqB,MANV;AAOfT,EAAAA,gBAAgB,EAAEZ,SAAS,CAACsB;AAPb,CAAjB;AASA,eAAelB,IAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Question from './Questions.js'; \nimport QuestionCount from './Q'; \nimport AnswerOption from './Answers.js';\n\nfunction Quiz(props) {\n\n    function renderAnswerOptions(key) {\n        return (\n          <AnswerOption\n            key={key.content}\n            answerContent={key.content}\n            answerType={key.type}\n            answer={props.answer}\n            questionId={props.questionId}\n            onAnswerSelected={props.onAnswerSelected}\n          />\n        );\n      }\n\n    return (\n       <div className=\"quiz\">\n         <QuestionCount\n           counter={props.questionId}\n           total={props.questionTotal}\n         />\n         <Question content={props.question} />\n         <ul className=\"answerOptions\">\n           {props.answerOptions.map(renderAnswerOptions)}\n         </ul>\n       </div>\n    );\n  }\n  Quiz.propTypes = {\n    answer: PropTypes.string,\n    answerOptions: PropTypes.array,\n    counter: PropTypes.number,\n    question: PropTypes.string,\n    questionId: PropTypes.number,\n    questionTotal: PropTypes.number,\n    onAnswerSelected: PropTypes.func\n  };\n  export default Quiz;"]},"metadata":{},"sourceType":"module"}